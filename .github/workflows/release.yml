name: New release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version
        type: string
        required: true
      prerelease:
        description: Prerelease
        type: boolean
        required: true

  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - name: Install compiler (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update
          sudo apt install fp-{compiler,units-{base,rtl,fcl}} -y --no-install-recommends

      - name: Install compiler (Windows/macOS)
        if: ${{ matrix.os != 'ubuntu-latest' }}
        uses: gcarreno/setup-lazarus@v3.3.1

      - name: Download fcl-jsonschema
        run: |
          curl -o fcl-jsonschema.tar https://gitlab.com/freepascal.org/fpc/source/-/archive/main/source-main.tar?ref_type=heads&path=packages/fcl-jsonschema
          tar -xf fcl-jsonschema.tar


      - name: Build all projects (UNIX)
        if: ${{ matrix.os != 'windows-latest' }}
        env:
          DEBUG: 0
        run: |
          fpc -gl -Fufcl-jsonschema fpmake.pp
          ./fpmake build -sp fcl-jsonschema
        
      - name: Build all projects (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        env:
          DEBUG: 0
        run: |
          fpc -gl -Fufcl-jsonschema fpmake.pp
          .\fpmake.exe build -sp fcl-jsonschema

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          path: build/bin/*
          if-no-files-found: error
          name: Commands Collection for ${{ matrix.os }}

  publish:
    runs-on: ubuntu-latest
    
    needs: build
    
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5

      - name: Publish
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          prerelease: ${{ github.event.inputs.prerelease }}
          draft: true
          body_path: ${{ github.workspace }}/changelogs/${{ github.event.inputs.version }}.md
          files: "Commands Collection for*"
          name: v${{ github.event.inputs.version }}
